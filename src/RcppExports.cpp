// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// myco_respiration
std::vector<double> myco_respiration(std::vector<double> years, std::vector<double> Tmb);
RcppExport SEXP _MycoModel_myco_respiration(SEXP yearsSEXP, SEXP TmbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type years(yearsSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type Tmb(TmbSEXP);
    rcpp_result_gen = Rcpp::wrap(myco_respiration(years, Tmb));
    return rcpp_result_gen;
END_RCPP
}
// myco_growth
std::vector<double> myco_growth(std::vector<double> years, std::vector<double> sugar, std::vector<double> Tmb);
RcppExport SEXP _MycoModel_myco_growth(SEXP yearsSEXP, SEXP sugarSEXP, SEXP TmbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type years(yearsSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type sugar(sugarSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type Tmb(TmbSEXP);
    rcpp_result_gen = Rcpp::wrap(myco_growth(years, sugar, Tmb));
    return rcpp_result_gen;
END_RCPP
}
// Toy_Model
Rcpp::List Toy_Model(std::vector<double> years, std::vector<double> sugar, std::vector<double> Tmb);
RcppExport SEXP _MycoModel_Toy_Model(SEXP yearsSEXP, SEXP sugarSEXP, SEXP TmbSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double> >::type years(yearsSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type sugar(sugarSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type Tmb(TmbSEXP);
    rcpp_result_gen = Rcpp::wrap(Toy_Model(years, sugar, Tmb));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MycoModel_myco_respiration", (DL_FUNC) &_MycoModel_myco_respiration, 2},
    {"_MycoModel_myco_growth", (DL_FUNC) &_MycoModel_myco_growth, 3},
    {"_MycoModel_Toy_Model", (DL_FUNC) &_MycoModel_Toy_Model, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_MycoModel(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
