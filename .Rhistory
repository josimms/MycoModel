library(MycoModel)
# Install CASSIA and PRELES
library(Rcpp)
# Work out the sugar available with CASSIA first
sugar <- sin(1:365*(pi/366)) # CASSIA::CASSIA() # TODO: this should have PRELES working inside it, and work generally
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2014, sugar)
library(MycoModel)
# Install CASSIA and PRELES
library(Rcpp)
# Work out the sugar available with CASSIA first
sugar <- sin(1:365*(pi/366)) # CASSIA::CASSIA() # TODO: this should have PRELES working inside it, and work generally
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Install CASSIA and PRELES
library(Rcpp)
# Work out the sugar available with CASSIA first
sugar <- sin(1:365*(pi/366)) # CASSIA::CASSIA() # TODO: this should have PRELES working inside it, and work generally
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2014, sugar)
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2014, sugar)
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2014, sugar)
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Install CASSIA and PRELES
library(Rcpp)
# Work out the sugar available with CASSIA first
sugar <- sin(1:365*(pi/366)) # CASSIA::CASSIA() # TODO: this should have PRELES working inside it, and work generally
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2014, sugar)
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2014, sugar)
library(MycoModel)
library(MycoModel)
Toy_Model(2014, rep(1, 365))
library(MycoModel)
Toy_Model(2014, rep(1, 365))
library(CASSIA)
library(CASSIA)
CASSIA()
library(CASSIA)
?CASSIA
CASSIA()
library(CASSIA)
CASSIA()
CASSIA::CASSIA()
# Install CASSIA and PRELES
library(Rcpp)
library(CASSIA)
CASSIA::CASSIA()
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA::CASSIA(Hyde_weather)
CASSIA::CASSIA()
?CASSIA::CASSIA()
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA::CASSIA(Hyde_weather, "Hyde")
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA::CASSIA(Hyde_weather, "Hyde", PRELES_GPP = TRUE)
library(Rprebasso)
library(Rprebasso)
install.packages("Rprebasso")
library(Rprebasso)
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA::CASSIA(Hyde_weather, "Hyde", PRELES_GPP = TRUE)
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA::CASSIA(Hyde_weather, "Hyde", PRELES_GPP = FALSE)
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA::CASSIA(Hyde_weather, "Hyde", PRELES_GPP = FALSE)
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA(Hyde_weather[2923:3652,], "Hyde", sperling_model = TRUE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T,
sperling = sperling_2018_bayes)[[1]][,c(1, 25:34)]
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA(Hyde_weather[2923:3652,], "Hyde", sperling_model = TRUE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]][,c(1, 25:34)]
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA(Hyde_weather[2923:3652,], "Hyde", sperling_model = TRUE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]]
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA(Hyde_weather[2923:3652,], "Hyde", sperling_model = TRUE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]][,c(26)]
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA(Hyde_weather[2923:(2923+365),], "Hyde", sperling_model = TRUE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]][,c(26)]
# Work out the sugar available with CASSIA first
# sugar <-
CASSIA(Hyde_weather[2923:3652,], "Hyde", sperling_model = TRUE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]][,c(26)]
# Work out the sugar available with CASSIA first
sugar <- CASSIA(Hyde_weather[2923:3652,], "Hyde", sperling_model = TRUE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]][,c(26)]
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2014, sugar)
# Final function
Toy_Model(2018, sugar)
library(Rprebasso)
preles()
library(Rcpp)
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp")
# Install CASSIA and PRELES
library(Rcpp)
library(CASSIA)
# Work out the sugar available with CASSIA first
sugar <- CASSIA(Hyde_weather[2923:3652,], "Hyde", sperling_model = TRUE, myco_model = FALSE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]][,c(26)]
sugar
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2018, sugar) # TODO: need to make sure that the model works for multiple years
# Final function
Toy_Model(2018, sugar, Hyde_weather$TSB) # TODO: need to make sure that the model works for multiple years
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2018, sugar, Hyde_weather$TSB) # TODO: need to make sure that the model works for multiple years
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
table(Hyde_weather$date)
table(substring(Hyde_weather$date, 1, 4))
# Final function
Toy_Model(2010:2019, sugar, Hyde_weather$TSB) # TODO: need to make sure that the model works for multiple years
# Work out the sugar available with CASSIA first
sugar <- CASSIA(Hyde_weather, "Hyde", sperling_model = TRUE, myco_model = FALSE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]][,c(26)]
# Final function
Toy_Model(2010:2019, sugar, Hyde_weather$TSB) # TODO: need to make sure that the model works for multiple years
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp")
366*(1+1)+365*(8)
# Install CASSIA and PRELES
library(Rcpp)
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2010:2019, sugar, Hyde_weather$TSB) # TODO: need to make sure that the model works for multiple years
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2010:2019, sugar, Hyde_weather$TSB) # TODO: need to make sure that the model works for multiple years
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2010:2019, sugar, Hyde_weather$TSB) # TODO: need to make sure that the model works for multiple years
# C++ code for the mycorrhiza growth and the trade offs
# TODO: all code in one file at the moment
Rcpp::compileAttributes()
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp")
# Final function
Toy_Model(2010:2019, sugar, Hyde_weather$TSB) # TODO: need to make sure that the model works for multiple years
# Work out the sugar available with CASSIA first
sugar <- CASSIA(Hyde_weather, "Hyde", sperling_model = TRUE, myco_model = FALSE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]][,c(26)]
# Final function
Toy_Model(2010, sugar, Hyde_weather$TSB) # TODO: need to make sure that the model works for multiple years
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
library(MycoModel)
pPREL
p
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
# Install CASSIA and PRELES
library(Rcpp)
library(CASSIA)
library(Rprebasso)
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
library(devtools)
install_github("Rprebasso")
install_github("ForModLabUHel/Rprebasso")
preles()
library(Rprebasso)
preles
PRELES()
nitrogen <- function(e_0, N, N_0, theta) {
e = (-(e_0*(1+N/N_0)) + sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
return(e)
}
plot(nitrogen(3, 1, 3.6, 2))
nitrogen(3, 1, 3.6, 2)
plot(nitrogen(3, 9.1, 3.6, 2))
e = (-(e_0*(1+N/N_0)) + sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
nitrogen <- function(e_0, N, N_0, theta) {
e = (-(e_0*(1+N/N_0)) + sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
return(e)
}
plot(nitrogen(3, 9.1, 3.6, 2))
nitrogen <- function(e_0, N, N_0, theta) {
e = (-(e_0*(1+N/N_0)) + sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
print(e)
return(e)
}
plot(nitrogen(3, 9.1, 3.6, 2))
nitrogen(3, 9.1, 3.6, 2)
}
nitrogen(3, 9.1, 3.6, 2)
nitrogen(3, 9.1, 3.6, 0.8)
nitrogen <- function(e_0, N, N_0, theta) {
e = (-(e_0*(1+N/N_0)) + sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
return(e)
}
nitrogen(3, 9.1, 3.6, 0.8)
plot(nitrogen(3, 8:15, 3.6, 0.8))
plot(8:15, nitrogen(3, 8:15, 3.6, 0.8))
plot(8:15, nitrogen(3, 8:15, 3.6, 0.5))
plot(8:15, nitrogen(3, 8:15, 3.6, 1))
plot(8:15, nitrogen(3, 8:15, 3.6, 1))
nitrogen <- function(e_0, N, N_0, theta) {
e = (-(e_0*(1+N/N_0)) - sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
return(e)
}
plot(8:15, nitrogen(3, 8:15, 3.6, 1))
nitrogen <- function(e_0, N, N_0, theta) {
e = (-(e_0*(1+N/N_0)) + sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
return(e)
}
plot(8:15, nitrogen(3, 8:15, 3.6, 1))
plot(8:15, nitrogen(3, 8:15, 3.6, 1), xlab = "Nitrogen", ylab = "Epsilon")
plot(8:15, nitrogen(3, 8:15, 8, 1), xlab = "Nitrogen", ylab = "Epsilon")
plot(8:15, nitrogen(3, 0:20, 8, 1), xlab = "Nitrogen", ylab = "Epsilon")
plot(0:20, nitrogen(3, 0:20, 8, 1), xlab = "Nitrogen", ylab = "Epsilon")
nitrogen <- function(e_0, N, N_0, theta) {
e = (e_0*(1+N/N_0) + sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
return(e)
}
plot(0:20, nitrogen(3, 0:20, 8, 1), xlab = "Nitrogen", ylab = "Epsilon")
nitrogen <- function(e_0, N, N_0, theta) {
e = (e_0*(1+N/N_0) - sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
return(e)
}
plot(0:20, nitrogen(3, 0:20, 8, 1), xlab = "Nitrogen", ylab = "Epsilon")
plot(0:20, nitrogen(3, 0:20, 8, 0.8), xlab = "Nitrogen", ylab = "Epsilon")
plot(0:20, nitrogen(3, 0:20, 8, 0.8)/3, xlab = "Nitrogen", ylab = "Epsilon")
plot(0:20, nitrogen(3, 9.1, 8, 0.8)/3, xlab = "Nitrogen", ylab = "Epsilon")
nitrogen(3, 9.1, 8, 0.8)
nitrogen(3, 9.1, 8, 0.8)/3
nitrogen <- function(e_0, N, N_0, theta) {
e = (e_0*(1+N/N_0) - sqrt((e_0*(1+N/N_0))^2 - 4*theta*e_0^2 * N / N_0))/(2*theta)
return(e)
}
plot(0:20, nitrogen(3, 0:20, 8, 0.8)/3, xlab = "Nitrogen", ylab = "Epsilon")
nitrogen(3, 9.1, 8, 0.8)/3
nitrogen(3, 15, 8, 0.8)/3
data.frame("a" = 1:10, "b" = 11:20)
hello = data.frame("col1" = 1:10, "col2" = 11:20)
rownames(hello) = seq("a", "j")
rownames(hello) = seq("a", "j", by = 1)
LETTERS
rownames(hello) = LETTERS[1:10]
rownames(hello)
hello = data.frame("col1" = 1:10, "col2" = 11:20)
rownames(hello) = LETTERS[1:10]
hello
return(value);
}
// [[Rcpp::export]]
int test(Rcpp::DataFrame df) {
hello = data.frame("col1" = 1:10, "col2" = 11:20)
rownames(hello) = LETTERS[1:10]
test(hello)
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
# Install CASSIA and PRELES
library(Rcpp)
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
hello = data.frame("col1" = 1:10, "col2" = 11:20)
rownames(hello) = LETTERS[1:10]
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sperling
sperling_p
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp") # REAL CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp") # REAL CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp") # REAL CODE
Rcpp::sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp")
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/testing_C_code.cpp") ## TEST CODE
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp") # REAL CODE
# Install CASSIA and PRELES
library(Rcpp)
sourceCpp("C:/Users/josimms/OneDrive - University of Helsinki/Mycorrhiza/Code/MycoModel/src/Toy_Model.cpp") # REAL CODE
# Final function
Toy_Model(2010:2019, sugar, Hyde_weather$TSB) # TODO: works for multiple years, but not for one year!
library(CASSIA)
# Work out the sugar available with CASSIA first
sugar <- CASSIA(Hyde_weather, "Hyde", sperling_model = TRUE, myco_model = FALSE,
mychorrhiza = FALSE, storage.reset = FALSE, phloem.trigger = T)[[1]][,c(26)]
# Final function
Toy_Model(2010:2019, sugar, Hyde_weather$TSB) # TODO: works for multiple years, but not for one year!
# Final function
Toy_Model(2010:2019, sugar, Hyde_weather$TSB) # TODO: works for multiple years, but not for one year!
?lapply
?mapply
